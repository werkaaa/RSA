from math import *
from Crypto.PublicKey import RSA
from Crypto.Util.number import *
import gmpy2
import sys

def FermatFactorization(N): #N must be odd
    a = gmpy2.isqrt(N) + 1
    print(a)
    b2 = a*a - N
    b = gmpy2.isqrt(b2)


    while(b*b != b2):
        a += 1
        print("hah")
        b2 = a*a-N
        b = gmpy2.isqrt(b2)
    return a - gmpy2.isqrt(b2), a + gmpy2.isqrt(b2)

def FermatFactorizationModi(N): #N must be odd
    a = gmpy2.isqrt(N) + 3
    print(a)
    b2 = a*a - N
    b = gmpy2.isqrt(b2)


    while(b*b != b2):
        a += 3
        print("hah")
        b2 = a*a-N
        b = gmpy2.isqrt(b2)
    return a - gmpy2.isqrt(b2), a + gmpy2.isqrt(b2)


k = 5959
ct1 = 13981765388145083997703333682243956434148306954774120760845671024723583618341148528952063316653588928138430524040717841543528568326674293677228449651281422762216853098529425814740156575513620513245005576508982103360592761380293006244528169193632346512170599896471850340765607466109228426538780591853882736654
ct2 = 79459949016924442856959059325390894723232586275925931898929445938338123216278271333902062872565058205136627757713051954083968874644581902371182266588247653857616029881453100387797111559677392017415298580136496204898016797180386402171968931958365160589774450964944023720256848731202333789801071962338635072065
e1 = 13
e2 = 15
mod = 13981765388145083997703333682243956434148306954774120760845645938338123216278271333902062872565058205136627757713051954083968874644581902371182266588247653857616029881453100387797111559677392017415298580136496204898016797180386402171968931958365160589774450964944023720256848731202333789801071962338635072065

ilo = ct1**15

print(gmpy2.gcd(ct1,ct2))
print(ilo%3)